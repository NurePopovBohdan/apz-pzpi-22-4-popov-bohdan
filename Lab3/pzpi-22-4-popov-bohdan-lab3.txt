МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ


ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ

Кафедра «Програмна інженерія»



ЗВІТ
до лабораторної роботи №3 з дисципліни
«Аналіз та рефакторинг коду» На тему: «Web застосунок»




Виконав:	Перевірив:
ст. гр. ПЗПІ-22-4	ас. кафедри ПІ
Попов Богдан Сергійович	Дашенков Дмитро Сергійович

















Харків 2025

 
3 РОЗРОБКА ПРОГРАМНОЇ АРХІТЕКТУРИ, СТВОРЕННЯ ТА ВІДЛАГОДЖЕННЯ ПРОГРАМНОГО КОДУ ВЕБ-КЛІЄНТА ПРОГРАМНОЇ СИСТЕМИ

3.1 ІСТОРІЯ ЗМІН


Метою роботи є розробка  бізнес-логіки та функцій адміністрування для серверної частини програмної системи.
У цьому розділі відображено історію внесених змін до звіту, що наведено у таблиці нижче.

Таблиця 1 – Історія змін
№	Дата	Версія	Опис змін
1	29.05.2025	0.1	Створено розділ «Завдання»
2	29.05.2025	0.1	Створено розділ «Опис виконаної роботи»
3	29.05.2025	0.1	Створено розділ «Висновки»
4	29.05.2025	0.1	Додано додатки А, Б, В


3.2 ЗАВДАННЯ


3.2.1 Мета роботи: 
Розробка клієнтську front-end частину програмої системи «SLC System».

У рамках виконання цієї лабораторної роботи було поставлено завдання розробити веб-частину для програмної системи AutoCare, яка призначена для моніторингу стану автомобілів. Веб-частина має забезпечувати функціональність для користувачів та адміністраторів, включаючи реєстрацію, авторизацію, керування транспортними засобами, перегляд даних з IoT-пристроїв та адміністративне керування системою. Необхідно було проаналізувати та описати створені компоненти системи, а також розробити відповідні UML-діаграми для візуалізації архітектури та взаємодії компонентів.


3	ОПИС ВИКОНАНОЇРОБОТИ


3.1 Розробка Use Case діаграми

Під час виконання лабораторної роботи була розроблена Use Case діаграма, яка відображає взаємодію акторів із системою AutoCare. На діаграмі представлено два основні актори: Користувач та Адміністратор.
•	Користувач може виконувати такі дії: реєструватися, авторизуватися, додавати/видаляти транспортні засоби, переглядати дані з IoT-пристроїв (наприклад, тиск у шинах, напруга батареї) та історію технічного обслуговування.
•	Адміністратор має розширені права, включаючи керування користувачами (блокування/розблокування, зміна ролей), перегляд статистики системи та управління всіма транспортними засобами.
Use Case діаграму можна переглянути в додатку Б.

3.2 Розробка діаграми компонентів

Була розроблена діаграма компонентів, яка ілюструє основні модулі веб-частини системи AutoCare. На діаграмі зображено такі компоненти:
•	Реєстрація та авторизація: Забезпечує створення облікових записів та вхід у систему.
•	Управління транспортними засобами: Дозволяє додавати, видаляти та переглядати транспортні засоби.
•	Управління даними IoT: Відображає дані з IoT-пристроїв у реальному часі.
•	Адміністративне керування: Надає інструменти для управління користувачами та системою загалом.
Діаграму компонентів можна переглянути в додатку Б.

3.3 Створення діаграми взаємодії

Була розроблена діаграма взаємодії, яка демонструє послідовність дій адміністратора в веб-частині системи AutoCare. На діаграмі показано, як адміністратор авторизується, переглядає список користувачів, змінює їхні ролі або видаляє їх, а також взаємодіє з сервером для оновлення даних. Діаграму взаємодії можна переглянути в додатку Б.

3.4 Створення діаграми діяльності

Під час виконання лабораторної роботи була розроблена діаграма діяльності, яка ілюструє процес роботи користувача в системі AutoCare. На діаграмі показано послідовність дій: реєстрація, авторизація, додавання транспортного засобу та перегляд даних з IoT-пристроїв. Діаграму діяльності можна переглянути в додатку Б.
3.5 Створення веб-частини програмної системи
Була розроблена веб-частина програмної системи AutoCare, яка включає наступну функціональність:
•	Реєстрація та авторизація: Реалізовані за допомогою компонентів Register.js та Login.js, які дозволяють користувачам створювати облікові записи та входити в систему.
•	Дашборд користувача: Реалізований у Dashboard.js, де користувачі можуть додавати/видаляти транспортні засоби, переглядати дані IoT (тиск у шинах, напруга батареї, товщина гальмівних колодок) та історію технічного обслуговування.
•	Навігаційна панель: Реалізована в Navbar.js, забезпечує перехід між сторінками та вихід із системи.
•	Адміністративна панель: Реалізована в AdminPanel.js, дозволяє адміністраторам керувати користувачами (зміна ролей, видалення), переглядати статистику системи та список усіх транспортних засобів.
Частину коду можна переглянути в додатку В. Веб-частина розроблена з використанням React та Axios для взаємодії з сервером.


4. ВИСНОВКИ


Під час виконання цієї лабораторної роботи було розроблено веб-частину для програмної системи AutoCare, яка відповідає темі моніторингу стану автомобілів. Було створено UML-діаграми (Use Case, компонентів, взаємодії, діяльності), що візуалізують архітектуру та взаємодію компонентів системи. Веб-частина забезпечує зручну функціональність для користувачів (керування транспортними засобами, перегляд IoT-даних) та адміністраторів (управління користувачами та системою). Робота виконана успішно, а система готова до подальшого розвитку.
 
ДОДАТОК Б
Графічні матеріали

 
Рисунок 1 – UML діаграма прецедентів
 
Рисунок 2 – UML діаграма компонентів
 
 
Рисунок 3 – UML діаграма діяльності
 
 
Рисунок 4 – UML – діаграма станів
